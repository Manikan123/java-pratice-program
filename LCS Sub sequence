//LCS(Largest Common SubSequence in Dynamic programming


import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String s1=sc.next();
		String s2=sc.next();
		int[][] arr=new int[s1.length()+1][s2.length()+1];
		for(int row=0;row<=s1.length();row++){
		    for(int col=0;col<=s2.length();col++){
		        if(row==0 || col==0){
		            arr[row][col]=0;
		        }
		        else if(s1.charAt(row-1)==(s2.charAt(col-1))){
		            arr[row][col]=1+arr[row-1][col-1];
		        }
		        else{
		            arr[row][col]=Math.max(arr[row][col-1],arr[row-1][col]);
		        }
		    }
		}
		for(int row=0;row<=s1.length();row++){
		    for(int col=0;col<=s2.length();col++){
		        System.out.print(arr[row][col]+" ");
		    }
		    System.out.println();
		}
		//System.out.println("The largest common subsequence is"+arr[s1.length()]+arr[s2.length()]);
		
	}
}


/*input:
ace
abcde
output:
0 0 0 0 0 0 
0 1 1 1 1 1 
0 1 1 2 2 2 
0 1 1 2 2 3*/ 
